#!/usr/bin/env ruby

require "bundler/setup"
require "oo_ruby"

# You can add fixtures and/or initialization code here to make experimenting
# with your gem easier. You can also use a different console, if you like.

# (If you use this, don't forget to add pry to your Gemfile!)
# require "pry"
# Pry.start

class Dog 

  @@all = []

  # a class method that's defined ON the class and called on the class (directly) and self will refer to the class within the method.
  def self.all
    @@all
  end

  attr_accessor :name, :age, :breed

  def initialize(name, age, breed)
    @name = name # @name is an instance variable
    @age = age # @age is an instance variable
    @breed = breed # @breed is an instance variable
    save(self)
  end

  # instance method, why? because we call it on an instance â€“ it's also defined inside the class but NOT ON the class.
  def save
    @@all << self # adds the receiving dog (the one we call .save on) to the @@all array
    self
  end

end

require "irb"
IRB.start(__FILE__)
